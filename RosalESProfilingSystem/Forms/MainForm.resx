<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBUAAAEAIAD8CgAAFgAAACgAAAAgAAAAKgAAAAEAIAAAAAAAgAoAACMuAAAjLgAAAAAAAAAA
        AAA1don/P4GV/zl2if8zb4D/M2+F/y1wiP8maoP/JWyE/x5sgv8qdoz/MH2U/x1xh/8UZX3/IWJ5/zRp
        fP8xan7/OXOK/2wpEP+NQyb/k1U8/3cqCf98NBX/dy8O/28mA/9qIwD/eDwb/4RRM/9sMg3/bzsW/2o5
        E/9kNg3/Wy4D/y1gbP8zeYz/OIGU/zp+kf9Qkav/VJmy/1mZtP9Ija7/MoKi/zB/m/8ufJj/K3eT/0CF
        o/9WlLH/eK/L/3mz0P9yrsr/cSsU/44/I/+UUTn/eigI/34yE/95LQ3/cSUD/2wiAP96Ohn/hU4w/20w
        DP9uNxL/ajUO/2UzC/9dLQP/Hzw+/zBNTP86bnr/SYul/1aUsf9dmrn/ZqPC/2Ggv/9dmbr/ebHQ/46/
        3f+Yyef/l8vs/5LH6f+Asc3/dKS6/0Nkdf9yJg7/exoA/3YbAv96IgL/dyEC/3UjA/91Jgb/cycF/20j
        Av9oIQH/aCYB/2UmAf9jKAH/YCoC/14tA/9rnq7/kbzH/12Bkf8gSW7/OWmW/zJgkP84Y5L/O2aN/ydI
        cf83Yov/QGmV/zdiiv8kRnP/ESpa/zlogv8zcYT/KVBf/3MkDv+BHAD/eRgB/3cYAf92GgH/dBoB/28Y
        AP9vHQH/cicE/28oBP9sKAP/aSkE/2YqA/9jKwP/YCwD/4axvf+aws3/YHqI/xc8UP9ak7b/WI2q/1WD
        ov8/cIv/I0hy/1KDp/9klLL/RHqZ/wscLf8AAA3/UYCZ/2+93P+h0ej/hTAa/5U9Jf+yeWj/qWpW/6xx
        Xv+qcV7/toh3/5ldRf9vIAD/cioI/20oBP9qKAP/ZykD/2QrA/9hLAP/eqix/4Wutf9egpH/Rmdw/3qe
        sf9wob//VZCx/0yRtP8pXpr/UY+8/2uozv9jnsX/MVpu/wAECv9SgJf/yvL//7ja7f+JMh//kCwT/6NX
        RP+fUj3/nlVB/6FeSv+bWUL/iD4o/2oUAP9qGgH/bCIC/2woA/9oKQP/ZSoD/2IrA/9zqrT/WGVg/3OQ
        n/8hYV3/BEE0/xlpeP9kosj/gLHP/2KJs/+Btt3/IFJy/wgXJP8eOUP/CTtB/0mDlv+pr6//tNnv/4sx
        H/+SKxP/o1VC/6RbSP+jXEn/mU47/5xYRf+cXUj/oGdQ/6JuWP9/Ph//aSIA/2opBP9mKgP/YysD/3eH
        if9ibmr/YnmE/yN6g/8hrKv/FYuJ/y6Jl/97rNb/dI6+/1GFpf8QV2X/FXaG/xlgdv8JXnX/TpKh/6qT
        iP/E1Nv/kS8d/5o3If+/hHf/tXRl/7BvXv+xdWT/pGNQ/5xaRP+ufGn/sINw/4NCJP9pIQD/aykE/2cp
        A/9kKwP/q56N/5OVlf9+pbT/E3J//x9UTf8YUU3/GVhX/yeAbf8/gIT/HVZb/xlaXv8gdHz/HoCP/xZo
        df9Sfon/p5ye/8FrXf+VHQD/kSQQ/51CLf+VOCP/lDwm/5RBKv+RQir/kkkv/3YgC/9sGAD/byMD/24n
        BP9rKAP/ZykD/2QqA/+VelD/kJSU/46xvf8RVU//IYaJ/xJSTP8dMSP/Jmc9/x5JMf8ePzb/GTcr/xQr
        IP8ocnH/KGdd/1iAhP+Wlpv/sE9R/48LAP+iQzL/xYyA/7VxYv+/iXv/u4R1/7qIeP+zf27/eiYI/3If
        AP9wIwP/biYD/2soA/9oKQP/ZSoD/2I4JP9ugH7/ZIaL/wViUP8ptsD/El9G/xNoTv8Rbl//BTAq/wET
        B/8FLRn/Czkh/yF/c/8MZFP/Rnh9/4J/f/+QNDP/jg4A/5MiDP+WMBz/lTUf/4soEf+MMBj/iTIY/34m
        Df+CMhj/hDwe/3oyFf9wKQn/aycC/2gpA/9lKgP/JjUw/1lmYP9bdXL/HmBN/yBvV/8ZYUL/OnZa/2mL
        d/9Va2f/QFM4/0NcQv8kQDr/JVRI/xs/N/8/ZW3/d31+/35hUf+DEQD/q049/8aRhv+9gHL/xZSH/8aZ
        jf/Cloj/uot8/7B+a/+9l4f/vZmJ/49XO/9mIAD/aSsF/2UqA/8bRyv/hqeq/3ikqP+Jhl7/k4RC/4h+
        Mf+UeSL/mHUj/5N2Mf+Xezz/hHpF/xA3K/8LNSD/G2NH/0CLkf+EnKP/l6mO/3wkBv+THAf/jiUP/4wm
        D/+JJw3/iCwT/4cwFv+DLxP/fCoO/3YnCf96MxP/cy8N/2onAv9nKQP/ZCoD/yRMLv+Isbb/msLK/3Sa
        uP9qh6r/Zomi/16Bmf9+q6v/jLe1/3+zuP9fk6b/S3qg/1+Qs/9Qhbb/hbHO/6TN1/9rknD/dxoA/6ZI
        Nv/LnZL/v4d6/8CNgP/AkIP/pmdT/3UZAP92IgT/cyMD/24iAf9sJQL/aigD/2cpA/9kKwP/L140/5Or
        nP+pv8L/fHd7/3VpcP+Gh5L/gYGM/4B8ev95dnX/fX6A/29paP9ydHv/c2pq/1dSWP+KnKb/e6eW/zGE
        T/+DLRH/kSYQ/5hBK/+VPSb/kDoh/4gxGP+CLBH/eCID/3YlBP9zJQP/cCYE/20pBf9rKgX/ZioD/2Mr
        A/9xjF//zbiT/8jDvP+Gkoz/kpmS/4+nqf+dra3/mJ2a/42Uk/+VnpX/pa2m/5yxt/+Nnp7/q7a3/052
        Yv8TWBf/WZll/4gyF/+DFQD/fxgB/34YAP96GAH/eRsB/3cdAv92IQH/cyMC/3ElA/9vJwT/ZyMB/2Eh
        AP9lKgP/YiwD/9/CrP/auZ7/4Mm5/6/Bw/+oydf/tdnr/6a7wv+blIX/iX1+/3F9xv+hu+z/1Pb//8Pp
        /P/D5u//U45W/y2FO/8nkkX/eSsN/4UcAv+AIAT/gCIF/4QuE/+BLBD/fy4R/3wuEP92Kgr/byUC/2ki
        AP9/PR3/iU4v/2QpBf9gKgL/w7Sc/9i6ov/au6P/z7ac/6+4tv+21OT/rLzE/6ajo/+blLv/ipfk/6W1
        6f/c7/D/09vY/8W0nP/DtZn/aqtr/2qvcv+ROCH/exgA/4QqD/+SRi7/llE5/5tcRf+VVj3/k1Y8/41Q
        Nf91MxH/iEgo/8izuf/UxMr/qoFq/1smAP/hx7b/3cKu/8+zlv/Lq4b/0bWY/8++rv/cy7//18i3/9TD
        sP/dx6j/1b+k/8y2of/MsZn/z7Sb/9nCsf/ez8L/38/D/4o3HP95HAD/fCMF/4c4HP+MRCr/iEIm/4tK
        Lv+HRyr/gkMl/2ciAP+ndF//0s7K/7i43v/Gq6j/ZTAF/+bRw//dxLL/07ie/8mtjv/Iq4r/1bie/9a4
        nv/Wt53/07Od/9W4pf/XuqT/1rmg/9e+qv/Wwq//08Gt/9XDsf/dyL3/hzkd/3YdAP93IAH/hz0h/5BP
        Nf+HQyf/hkYq/4lOMf+GTC//ZyUA/35CIf/ZubX/59DZ/6BzXf9XJwD/5tHD/9rBrv/WuqP/0red/86y
        mP/Mspf/zrOU/9i8pv/Vt6T/2r+p/9S5pP/Krpf/ya+Y/8qxnv/Mt6T/z76u/824qf+CNxn/cx8A/3Uk
        BP93Kgn/eC0N/3UsC/90Lgz/czEP/28vC/9pKgT/YSQA/3A4FP97RiH/WyoC/1otAv8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>